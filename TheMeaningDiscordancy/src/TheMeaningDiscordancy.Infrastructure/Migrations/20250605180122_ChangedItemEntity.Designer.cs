// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TheMeaningDiscordancy.Infrastructure.Data;

#nullable disable

namespace TheMeaningDiscordancy.Infrastructure.Migrations
{
    [DbContext(typeof(DiscordContext))]
    [Migration("20250605180122_ChangedItemEntity")]
    partial class ChangedItemEntity
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TheMeaningDiscordancy.Infrastructure.Models.Entities.ImageDataEfc", b =>
                {
                    b.Property<Guid>("ObjectKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImageName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ObjectKey");

                    b.ToTable("ImageData");
                });

            modelBuilder.Entity("TheMeaningDiscordancy.Infrastructure.Models.Entities.ItemEfc", b =>
                {
                    b.Property<Guid>("ObjectKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ImageDataObjectKey")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ObjectKey");

                    b.HasIndex("ImageDataObjectKey");

                    b.HasIndex("ItemId")
                        .IsUnique();

                    b.ToTable("Items");
                });

            modelBuilder.Entity("TheMeaningDiscordancy.Infrastructure.Models.Entities.TagEfc", b =>
                {
                    b.Property<Guid>("ObjectKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TagId")
                        .HasColumnType("int");

                    b.HasKey("ObjectKey");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("TheMeaningDiscordancy.Infrastructure.Models.Entities.ItemEfc", b =>
                {
                    b.HasOne("TheMeaningDiscordancy.Infrastructure.Models.Entities.ImageDataEfc", "ImageData")
                        .WithMany()
                        .HasForeignKey("ImageDataObjectKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ImageData");
                });
#pragma warning restore 612, 618
        }
    }
}
